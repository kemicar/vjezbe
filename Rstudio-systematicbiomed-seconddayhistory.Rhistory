vec7<-c(1.777, 2.345,3.89,4,5.626)
print(vec7)
vec7[3:5]
vec7[-3]
print(vec7)
vec7b <- vec7[-3]
vec7b
vec8 <- c(1E-3, 1E4)
print vec8
print(vec8)
log(vec8)
log(vec8, base -10)
log(vec8, base = 10)
exp(vec8)
vec9 <- (24, 28, 37, 27, 31, 39)
vec9 <- c(24, 28, 37, 27, 31, 39)
cut_vec9 <- (cut_vec9, breaks = 3)
cut_vec9 <- cut(vec9, break = 3)
cut_vec9 <- cut(vec9, breaks  = 3)
cut_vec9
cut_vec9 <- cut(vec9, breaks = 3, right = F)
cut_vec9
vec10 <- c(1:5)
vec10
c
cut_vec9 <- cut(vec9, breaks = 5)
cut_vec9
cut_vec9 <- cut(vec9, breaks = 5, right = F)
cut_vec9
cut_vec9 <- cut(vec9, breaks = 5, right = T)
cut_vec9
vec11 <- c(3:6)
vec11
cut_vec11 <- cut(vec11, breaks  = 2)
print(cut_vec11)
cut_vec11 <- cut(vec11, breaks = 2, labels = c("GROUP1", "GROUP2"))
print(cut_vec11)
print(vec11)
vec11
split_vector <- c(0, 2, 4, 6)
split_vector
split_vec11 <- cut(vec11, breaks = split_vector, labels = ("first", "second", "third"), ordered_results = F)
split_vec11 <- cut(vec11, breaks = split_vector, labels = c("first", "second", "third"), ordered_results = F)
vec11
split_vec11
category <- cut(vec11, breaks = split_vector, labels = c("first", "second", "third"), ordered_results = F)
vec11
split_vec11
print(category)
split_vec11
category <- cut(vec11, breaks = split_vector, labels = c("first", "second", "third"), ordered_results = T)
vec11
split_vec11
?cut
TEXT VECTORS
text_vec <- "Chemometrics" "is" "cool"
text_vec <- "Chemometrics is" "cool"
text_vec <- "Chemometrics, is, cool"
strsplit(text_vec,",")
gene <- "ATGCTGUUAGCTUGT"
stopcodon <- "UAG"
strsplit(gene, stopcodon)
polypeptides <- strsplit(gene, stopcodon)
polypeptides
gene2 <- paste0(gene, stopcodon)
gene3
gene2
#TASK
vec_ages <- c(2,3, 6, 8, 10, 11, 17, 21, 30, 42)
vec_ages <- c(2, 6, 8, 11, 17, 21, 30, 42, 54, 68)
age_groups <- cut(vec_ages, breaks = c(30, 60, Inf), labels = c("Young", "Middle-ageed", "Elderly"))
age_groups <- cut(vec_ages, breaks = c(30, 60, Inf), labels = c("Young", "Middle-aged", "Elderly"))
#new try
ages <- c(2, 6, 8, 11, 17, 21, 30, 42, 54, 68)
ages
age_groups <- cut(ages, breaks = c(0, 30, 60, Inf), labels = c("Young", "Middle-aged", "Elderly"))
age_groups
ages
#error before was that i forgot to include the 0 in the breaks
###LISTS
#COMBINATION OF VECTORS
vec1 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
vec2 <- c("severe", "mild", "control")
vec3 <.
vec3 <- as.factor(c("severe", "mild", "control"))
list_vec <- list(vec2, vec3, vec1)
print(list_vec)
list_vec[2]
length(list_vec)
list_vec[1]
list_vec[1] <.
list_vec[1] <- NULL
lenght(list_vec)
list_vec <- list(vec2, vec3, vec1)
print(list_vec)
list_vec[1]
list_vec <- NULL
lenght(list_vec)
Lenght(list_vec)
list_vec
list_vec <- list(vec2, vec3, vec1)
print(list_vec)
first_part <- list_vec[1:2]
second_part <- list_vec[3]
first_part
second_part
#MATRIX
#(2-d data)
?matrix
vec12 <- c(1:10)
mat <- matrix(vec12, ncol = 5, nrow = 2)
mat
mat <- matrix(vec12, 5, 2)
View(mat)
mat2 <- matrix(vec12, 2, 5)
View(mat2)
mat
may2
mat2
print(mat)
print(mat2)
mat[2,1]
mat
mat[1:5, 2]
mat
mat[2, 1:2]
mat
mat[c(2,5), 2]
mat
colnames(mat) <- c("a", "b")
mat
rownames(mat) <- ("c", "d", "e", "f", "g")
rownames(mat) <- c("c", "d", "e", "f", "g")
mat
vec12
vec11
mat_3 <- cbind(vec12, vec11)
#SECOND CLASS
suma <- function(x, y)
zbroj <- x + y
return(zbroj)
zbroj <- x + y
#start again
suma <- function(x, y) {}
suma <- function(x, y) {
zbroj <- x + y
return(zbroj)
}
LOGSI
logsuma <- function(val1, val2)
zbroj <- log10(val1) + log10(val2)
logsuma <- function(val1, val2) {
zbroj <- log10(val1) + log10(val2)
return(zbroj)
}
primjer3 <- logsuma(2, 5)
prinjer3
primjer3
##TASK2
pH <- function(3, 6) {
ph <- function(3, 6) {
pH <- function(acid, base) {
zbroj <- -log10(acid) + -log10(base)
return(zbroj)
}
primjer3 <- pH(3, 6)
primjer3
#task correction
ph <- function(kond){
ph
ph_vrijednost <- -log10(kond)
return(ph_vrijednost)
}
ph(0.002)
ph(3E-5)
#advanced examples
toxic_unit <- function(conc, ac50){
tu <- conc/ac50
ltu <- log10(tu)
return(ltu)
}
primjer4 <- toxic_unit(0.005, 0.01)
primjer4
concentration <- 0.005
ac50 <- 0.01
primjer5 <- toxic_unit(concentration, ac50)
primjer5
sava_spojevi <- c(0.01, 0.002, 0.0005)
ac50 <- c(0.34, 1.5, 0.001)
primjer6 <- toxic_unit(sava_spojevi, ac50)
primjer6
naziv_funkcije <- function(argument){
}
#BMI calculation, body mass
bmi_classifier
bmi_classifier <- function(m, v){
bmi_calculation <- m/v**2
if (bmi_calculation < 25){
bmi_class <- "Good"
} else {
bmi_class <- "Could be better"
}
return(c(bmi_calculation, bmi_class))
Ã‡
}
primjer7 <- bmi_classifier(76, 1.83)
primjer7
#TASK3
ph <- function(konk) {
ph_vrijednost <- -log10(konk)
if (ph_vrijednost < 7){
ph_klasa <- "acid"
} else {
ph_klasa <- "alkaline"
}
return(c(ph_vrijednost, ph_klasa))
}
ph(0.002)
ph(4E-8)
install.packages("tidyverse")
library("tidyverse")
stopifnot(requiere("tidyverse"))
stopifnot(require("tidyverse"))
stopifnot(getRversion() >= "4.1.0")
getRversion()
vec21 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9,)
vec21 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
vec22 <- c(T, F, F, T, F, F, F, T, T)
vec23 <- sqrt(vec21**2)
data.frame(vec21, vec22, vec23)
dt
#(error dt)
df1 <- data.frame(vec21, vec22, vec23)
df1
df2 <- data.frame(yes_no = vec22, patient = vec23)
print(df2)
View(df2)
View(df2) #base packag in R
View(df2) #"tidyverse" package
write.table(x = df2, file = "pokusaj.txt", row.names = F, col.names = T, sep = ";") #coma (,), tab (\t), semicolon (;), space (), pipe (|)
getwd()
tablica <- read.table(file = "pokusaj.txt", #name of the chosen file
sep = ";", #how we want to separate every data entry
header = TRUE, #if T(true) first row will be column names
stringsAsFactors = T) #if T strings are transformed into factors (it is the way R works)
tablica <- read.table(file = "pokusaj.txt", #name of the chosen file
+                         sep = ";", #how we want to separate every data entry
> tablica <- read.table(file = "pokusaj.txt", #name of the chosen file
tablica <- read.table(file = "pokusaj.txt", #name of the chosen file
sep = ";", #how we want to separate every data entry
header = TRUE, #if T(true) first row will be column names
stringsAsFactors = T) #if T strings are transformed into factors (it is the way R works)
View(tablica)
save.image("~/Second day.RData")
save.image("~/Rstudio-systematicbiomed-secondday.RData")
load("~/Rstudio-systematicbiomed-secondday.RData")
load("/Users/victoriadelarocha/Rstudio-systematicbiomed-secondday.RData")
savehistory("~/Rstudio-systematicbiomed-seconddayhistory.Rhistory")
