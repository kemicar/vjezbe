help.start()
X
x
X
1+2
a = 1 + 2
b < -
b <-
1+2
1+2
a = 1 + 2
b <- 10 + 20
A = 100 + 200
2*2
c = 2*2
d = 4/2
B = 5^2
x
class(x)
x = 2
class(x)
z = 0.2
class(z)
logical <- TRUE
vec1 <- c(1,2,3,4,5,6,7,8,9)
vec2 <- c(T,F,FALSE,TRUE)
vec3 <- c("severe","mild","control")
vec4 <- as.factor (c(("severe","mild","control")))
vec4 <- as.factor (c("severe","mild","control"))
rm (vec1)
vec1
vec6 <- (1,2,3,-1,-2,0.1,-0.1)
> vec6 <- c(1,2,3,-1,-2,0.1,-0.1)
vec6 <- (1,2,3,-1,-2,0.1,-0.1)
vec6 <- c(1,2,3,-1,-2,0.1,-0.1)
abs(vec6)
max(vec6)
?sqrt
vec7 <- c(1.237, 2.944, 3, 4, 5.5222)
X=R
y=1
Y = "test"
X = "R"
savehistory("~/Desktop/BIOMEDICINE/Class1.Rhistory")
save.image("~/Desktop/BIOMEDICINE/Sin título.RData")
vec7 <- c(1, 2, 3, 4, 5.5)
print(vec7)
vec7(3)
vec7 [3]
vec7 [3:5]
vec7b <- vec7[-4]
vec8 <- (1E-4, 1E3)
vec8 <- c(1E-4, 1E3)
print(vec8)
log(vec8)
log10(vec8)
log(vec8, base = 10)
exp(vec8)
vec9 (20, 22, 18, 26, 29, 31, 24.5)
> vec9<- c(20, 22, 18, 26, 29, 31, 24.5)
vec9<- c(20, 22, 18, 26, 29, 31, 24.5)
cut_vec9 <- cut (vec9,breaks = 4)
> cut_vec9 <- cut (vec9,breaks = 4, right = T)
cut_vec9 <- cut (vec9,breaks = 4, right = T)
cut_vec9
vec10(3:6)
vec10<- c(3:6)
vec10
cut_vec10 <- cut()vec10, breaks = 2)
cut_vec10 <- cut(vec10, breaks = 2)
print(vec10)
print(cut_vec10)
cut_vec10 <- cut(vec10, breaks = 2, labels= c("GroupA", "GroupB"))
print(cut_vec10)
split_vector <- c(0, 2, 4, 6)
split_vector
split_vec10 <- cut(vec10, breaks = split_vector)
vec10
split_vec10
category <- cut(vec10, breaks = split_vector, labels = c("first", "second", "third"), ordered results = F)
category <- cut(vec10, breaks = split_vector, labels = c("first", "second", "third"), ordered_results = F)
print(category)
category <- cut(vec10, breaks = split_vector, labels = c("first", "second", "third"), ordered_results = T)
print(category)
text_vec <- ´Chemometrics, is, cool´
text_vec <- ´Chemometrics, is, cool`
text_vec <- "Chemometrics, is, cool"
strsplit(text_vec, ",")
gene <- "ATGCTGUUAGCTUGT"
stopcodon <- "UAG"
strsplit(gene, stopcodon)
AGES <- c(10, 35, 40, 23, 66,  72, 89, 7, 14, 93)
cut_AGES <- cut(AGES, breaks = 3)
cut_AGES
category <- cut(vec10, breaks = split_vector, labels = c("first", "second", "third"), ordered_results = T)
category <- cut(AGES, breaks = 3, labels = c("Young (0-30)", "Middle-aged (31-60)", "Elderly (61+)")
print(category)
category <- cut(AGES, breaks = 3, labels = c("Young (0-30)", "Middle-aged (31-60)", "Elderly (61+)"))
print(category)
> category <- cut(AGES, breaks = c(0,30,60, Inf), labels = c("Young (0-30)", "Middle-aged (31-60)", "Elderly (61+)"))
category <- cut(AGES, breaks = c(0,30,60, Inf), labels = c("Young (0-30)", "Middle-aged (31-60)", "Elderly (61+)"))
print(category)
cut_AGES <- cut(AGES, breaks = c(0,30,60, Inf), labels = c("Young (0-30)", "Middle-aged (31-60)", "Elderly (61+)"))
cut_AGES
vec1 <- c(1,2,3,4,5,6,7,8,9)
vec2 <- c("severe", "mild", "control")
vec4 <- as.factor (c("severe", "mild", "control"))
list_vec <- list(vec3, vec4, vec1)
list_vec <- list(vec2, vec4, vec1)
print(list_vec)
list_vec(9)
list_vec[9]
length(list_vec)
list_vec[1]
list_vec[1]
list_vec[1] <- NULL
length(list_vec)
list_vec <- list(vec2, vec4, vec1)
print(list_vec)
first_part <- list_vec[c(1,3)]
second_part <- list_vec[2:3]
first_part
second_part
vec111 <- c(1:10)
mat <- matrix (vec111, ncol=5, nrow=2)
matrix(data, nrow = rows, ncol = cols)
mat <- matrix (vec11, 5, 2)
mat <- matrix (vec111, 5, 2)
view(mat)
View(mat)
mat_2 <- matrix(vec111, 2, 5)
mat_2
mat[2,1]
matq
mat
mat[1:5, 2]
mat[2,1:2]
mat[c(2,5), 2]
colnames(mat) <- c("a","b")
mat
rownames(mat) <- c("c", "d", "e", "f", "g")
mat
SECOND PART OF THE class()
suma <- function (x,y)
zbroj <- x + y
suma <- function (x,y) {zbroj <- x + y return(zbroj)}
suma <- function (x,y) {                                                                                                zbroj <- x + y                                                                                                            return(zbroj)                                                                                                               }
suma <- function(x,y) {
zbroj <- x + y
return (zbroj)
}
logsuma <- function(val1, val2) {
zbroj <- log10(val1) + log10(val2)
return (zbroj)
}
primjer3 <- logsuma(2,5)
primjer3
#TASK2
concentration <- 4E-3
pH <- function (val1) {
formula <- log 10 (val1)
pH <- function(val1) {
+ formula <- log 10(val1)
pH <- function(val1){
formula <- log10(val1)
return (formula)
}
pH <- pH(concentration)
pH
pH <- function (acid, base){
suma <- -log10 (acid) + -log10(base)
return(suma)
}
primjer3 <- pH(3,6)
primjer3
advanced examples
toxic_unit <- function c(conc, ac50){
ty <- conc/ac50
toxic_unit <- function (conc, ac50){
tu <- conc/ac50
ltu <- log10 (tu)
return(ltu)
}
primjer4 <- toxic_unit (0.005, 0.01)
primjer4
concentration <- 0.005
ac50<- 0.01
primjer5 <- toxic_unit (concentration, ac50)
primjer5
sava_spojevi <- c(0.01,0.002,0.0005)
ac50 <- c(0.34, 1.5, 0.001)
primjer6 <- toxic_unit(sava_spojevi, ac50)
primjer6
#advanced examples
#BMI calculation, body mass
bmi_classifier <- function (m,v) {
bmi_calculation <- m/v**2
if (bmi_calculation < 25){
bmi_class <- "Good"
} else {
bmi_ class <- "Could be better"
bmi_ class <- "Could be better"}
return (c(bmi_calculation, bmi_class))}
primjer <- bmi_classifier(76,1.83)
#TASK3
#make a function for pH calculation based on concentration, use -log10
#make function with if else () with condition, pH less than 7 is acid, more is alkaline. The result has to be calculated pH and the class (acid or alkaline)
pH <- function(konc)
pH <- function(konc){
> pH <- function(konc){
> pH <- function(konc) {
> pH <- function(konc) {
pH <- function(konc) {
pH <- function(konc) {
pH <- function(konc) {
ph_vrijednost <-- log10 (konc)
if (ph_vrijednost < 7){
ph_klasa <- "acid"
}else{
pH_klasa <- "alkaline"
}
return(c(ph_vrijednost,ph_klasa))
}
install.packages ("tidyverse")
>install.packages("tidyverse")
>install.packages("tidyverse")
install.packages("tidyverse")
library("tidyverse")
stopifnot(require("tidyverse"))
stopifnot(getRversion() <= "4.1.0")
stopifnot(getRversion() >= "4.1.0")
getRversion()
vecA <- (1,2,3,4,5,6)
vecA <- c(1,2,3,4,5,6)
vecB <- c(T,F,F,T,T,F)
vecC <- sqrt(vec1**2)
#with data, frame() command we will make
df1 <-data.frame(vecA, vecB, vecC)
df2<- data.frame(yes_no = vec2, patient =vec3)
df2<- data.frame(yes_no = vecB, patient =vecC)
vec50 <- c(1,2,3,4,5,6,7,8,9)
vec51 <- (T,F,F,T,F,T,F,T,T)
vec51 <- C(T,F,F,T,F,T,F,T,T)
vec51 <- c(T,F,F,T,F,T,F,T,T)
vec52 <- sqrt(vec1**2)
df1 <- data.frame(vec50,vec51,vec52)
df2 <- data.frame (yes_no = vec51, patient = vec52)
print(df2)
view
view(df2)
write.table (x=df2,
file = "pokusaj.txt",
row.names
col.names = T,
sep = ";"
write.table(x=df2,
file="pokusaj.txt",
row.names=F,
col.names=T,
sep=";")
getwd()
tablica <- read.table(file="pokusaj.txt",
sep=";",
header= TRUE,
stringsAsFactors=T)
view(tablica)
df3 <- read.table(file="data.txt",
sep="\t",
header=TRUE,
stringsAsFactors=False)
savehistory("~/Desktop/BIOMEDICINE/History-Thursdayclass.Rhistory")
