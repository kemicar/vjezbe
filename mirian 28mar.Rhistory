#####Vectors
vec1 <-c(1.237, 2.944, 3, 4, 5.5222)
print (vec1)
vec1[3:5]
vec1 [-3]
print (vec1)
vec1b <- vec1[-3]
vec2 <-c(1.123, 2.345, 3, 4, 5,666)
> print (vec2)
print (vec2)
vec2[3:5]
vec2 [-3]
print (vec2)
vec2b <- vec2b[-3]
vec2b <- vec2[-3]
vec2b
vec3 <- c(1E-4, 1E4)
print(vec3)
log(vec3)
log10(vec3)
log(vec3, base=10)
exp(vec3)
log(vec3, base=3)
log(vec3, base=4)
exp(vec3)
vec4 <-c(20, 21,18,26,25,30,25.5)
cut_vec9 <- cut(vec9, breaks=3)
cut_vec4 <- cut(vec4, breaks=3)
cut_vec4
vec4
?cut
cut_vec4 <- cut(vec4, breaks=3, right=F)
cut_vec4
cut_vec4 <- cut(vec4, breaks=3, rigth=T)
cut_vec4 <- cut(vec4, breaks=3, right=T)
cut_vec4
vec5 <-c(2:7)
vec5
cut_vec5 <- cut(vec5, breaks=2)
cut_vec5
print(cut_vec5)
cut_vec5 <-cut(vec5, breaks=2, labels=c("Group1", "Group2"))
print(cut_vec5)
print(vec5)
vec5
split_vector <-c(0,2,4,6)
split_vector
split_vec5 <-cut(vec5, breaks=split_vector)
vec5
split_vec5
split_vector <-c(0,2,4,6,8)
split_vec5 <-cut(vec5, breaks=split_vector)vec5
split_vec5 <-cut(vec5, breaks=split_vector)
vec5
split_vec5
category <- cut(vec5,
breaks = split_vector,
labels= c('first','second','third'),
ordered_result=F)
category <- cut(vec5,
breaks = split_vector,
labels= c('first','second','third'),
ordered_result=T)
category <- cut(vec5,
+                 breaks = split_vector,
category <- cut(vec5,
breaks = split_vector,
labels= c('first','second','third','fourth'),
ordered_result=T)
print(category)
?cut
text_vec <- 'Chemometrics, is, cool'
strsplit(text_vec,',')
gene <- 'ATGCTGUUAGCTUGT'
stopcodon <-'UAG'
strsplit(gene, stopcodon)
polypeptides <- strsplit(gene,stopcodon)
polypeptides
gene2 <- paste0(gene,stopcodon)
gene2
ages <-c(8,20,21,31,45,52,54,73,86,10)
cut_ages <-cut(ages,
breaks=3,
labels= c('Young','Middle-aged','Eldery'))
cut_ages
ages_groups <- cut(ages,
breaks= c(0,30,60, Inf),
labels= c('Young','Middle-aged','Eldery'))
ages_groups
ages
#combinations of vectors
vec 6<-c(1,2,3,4,5,6,7,8,9)
vec 6 <-c(1,2,3,4,5,6,7,8,9)
vec 6 <-c (1,2,3,4,5,6,7,8,9)
vec 6 <- c(1,2,3,4,5,6,7,8,9)
vec 6 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
vec 10 <-c(1,2,3,4,5,6,7,8,9)
vec6 <- c(1,2,3,4,5,6,7,8,9)
vec7 <- c("severe","mild","control")
vector8 <-as-factor(c("severe","mild","control"))
vec8 <-as.factor(c("severe","mild","control"))
list_vec <- list(vec7,vec8,vec6)
print(list_vec)
list_vec[4]
length(list_vec)
list_vec[6]
list_vec[6] <- NULL
length(list_vec)
list_vec <-list(vec7,vec8,vec6)
print(list_vec)
first_part <-list_vec[1:2]
second_part <- list <- vec[3]
second_part <- list_vec[3]
first_part
second_part
first_part <-list_vec[c(1,3)]
second_part <- list_vec[2:3]
first_part
second_part
Â·matrix
#matrix
vec11 <- c(1:10)
mat <- matrix(vec11, ncol=5, nrow=2)
mat
mat <- matrix(vec11,5,2)
View(mat)
mat
mat_2 <- matrix(vec11,2,5)
View(mat_2)
mat_2
view(vec11)
View(vec11)
mat[2,2]
mat
mat[1:5, 2]
mat[2,1:5]
mat[c(2,5),2]
colnames(mat) <-c("a","b")
colnames
colnames(mat) <-c("a", "b")
colnames(mat) <- c("a", "b")
mat
rownames(mat) <- c("c","d")
rownames(mat) <- c("c","d","e","f","g")
mat
View_mat
View(mat)
save.image("~/class 28/firstclass mirian 28:3.RData")
savehistory("~/class 28/mirian first class28:3.Rhistory")
#######FUNCTIONS
suma <- function(x,y)
xbroj <- x+y
return (zbroj)
zbroj <- x+y
suma <- function(x,y) {
zbroj <- x+y
return(zbroj)
}
sumaa (1,2)
suma(1,2)
suma(5,-7)
#task 1
oduzimanje <- function(x,y,z) {
zbroj <- x+y+z
return(zbroj)
}
oduzimanje <- function(x,y,z) {
zbroj <- x-y-z
return(zbroj)}
primjer1<-oduzimanje(1,2,3)
primjer1
primjer2 <-oduzimanje((5,-7,9))
primjer2 <-oduzimanje(5,-7,9)
primjer2
logsuma <- function(val1,val2) {
zbroj <- log10(val1) + log10(val2)
return(zbroj)
}
primker3 <- logsuma(2,5)
primjer3
primjer3 <- logsuma(2,5)
primjer3
#task2
concentration <- 6E-3
pH <- function(val1) {
formula <- log10(val1)
return(formula)
}
pH <- pH(concentration)
pH
# I skip the negative, i did it again
pH <- function(val1) {
formula <- -log10(val1)
return(formula)}
pH
pH <- pH(concentration)
pH
#ADVANCED EXAMPLES
#calculate toxic unit
toxic_unit <- function(conc,ac50) {
tu <- conc/ac50
ltu <-log10(tu)
return(ltu)
}
primjer4 <-toxic_unit(0.005,0.01)
primjer4
newconcentration <-0.005
ac50 <- 0.01
primjer5 <- toxic_unit(newconcentration,ac50)
primjer5
sava_spojevi <- c(0.01,0.002,0.0005)
ac50 <- c(0.34,1.5,0.001)
primjer6 <- toxic_unit(sava_spojevi,ac50)
primjer6
#AVANCED EXAMPLES WITH IF ELSE
#BMI CALCULATION
bmi <- classifier <- function(m,v)
bmi <- classifier <- function(m,v) {
bmi_calculation <- m/v**2
}
bmi <- classifier <- function(m,v) {
bmi_calculation <- m/v**2
if (bmi_calculation < 25) {
bmi_class <- 'Good'
} else {
bmi_class <- 'Could be better'
}
return(c(bmi_calculation, bmi_class))}
primjer <- bmi_classifier(76,1.83)
primjer7 <- bmi_classifier(76,1.83)
primjer7 <- bmi_classifier(76, 1.83)
primjer7
primjer7 <- bmi_classifier(76,1.83)
#again, i did it worng
bmi_classifier <- function(m,v) {
bmi_calculation <- m/v**2
if (bmi_calculation < 25) {
bmi_class <- 'Good'
} else {
bmi_class <- 'Could be better'
}
return(c(bmi_calculation, bmi_class))}
primjer7 <- bmi_classifier(76, 1.83)
primjer7
#task3
pH_classifier <- function(H) {
pH_calculation <- -log(H)
if (pH_calculation <7){
pH_class <- 'acid'
} else {
pH_class <- 'basic'
} return(c(pH_calculation, pH_class))
pH_classifier <- function(H) {
pH_calculation <- -log(H)
if (pH_calculation <7){
pH_class <- 'acid'
} else {
pH_class <- 'basic'
} return(c(pH_calculation, pH_class))}
pH_classifier <- function(H) {
pH_calculation <- -log(H)
if (pH_calculation <7){
pH_class <- 'acid'
} if (pH_calculation >7){
pH_classifier <- function(H) {
pH_calculation <- -log(H)
if (pH_calculation <7){
pH_class <- 'acid'
} if (pH_calculation >7){
#correction
ph <- function(konc) {
ph_vrijednost <- -log10(konc)
if (ph_vrijednost < 7){
ph_klasa <- "acid"
} else {
ph_klasa <- "alkaline"
}
return(c(ph_vrijednost, ph_klasa))
}
primjer9 <- pH(2)
#packages
install.packages("tidyverse")
library("tidyverse")
stopifnot(require('tidyverse'))
stopifnot(getRversion() >= "4.1.0")
getRversion()
#dataframes
vec1 <-c(1,2,3,4,5,6,7,8,9)
vec2 <- c(T,F,F,T,F,F,F,T,T)
vec3 <- sqrt(vec1**2)
dat.frame(vec1,vec2,vec3)
data.frame(vec1,vec2,vec3)
#saving
df1 <- data-frame(vec1,vec2,vec3)
df1 <- data.frame(vec1,vec2,vec3)
df1
df2 <- data.frame(yes_no =vec2, patient =vec3)
print(df2)
view(df2)
View(df2)
write.table(x=df2,
file="pokusaj.txt",
row.names=F,
col.names=T,
sep=";")
getwd()
###.txt
tablica <- read.table(file='pokusaj.txt',
sep=";",
header=TRUE,
stringsAsFactors = T)
View(tablica)
save.image("~/Downloads/mirian 28mar.RData")
savehistory("~/class 28/3/2024/mirian 28mar.Rhistory")
savehistory("~/Downloads/mirian 28mar.Rhistory")
